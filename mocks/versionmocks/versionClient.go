// Code generated by MockGen. DO NOT EDIT.
// Source: vsphere-automation-sdk-go/services/nsxt-mp/nsx/node/VersionClient.go

// Package versionmocks is a generated GoMock package.
package versionmocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/vmware/vsphere-automation-sdk-go/services/nsxt-mp/nsx/model"
)

// MockVersionClient is a mock of VersionClient interface.
type MockVersionClient struct {
	ctrl     *gomock.Controller
	recorder *MockVersionClientMockRecorder
}

// MockVersionClientMockRecorder is the mock recorder for MockVersionClient.
type MockVersionClientMockRecorder struct {
	mock *MockVersionClient
}

// NewMockVersionClient creates a new mock instance.
func NewMockVersionClient(ctrl *gomock.Controller) *MockVersionClient {
	mock := &MockVersionClient{ctrl: ctrl}
	mock.recorder = &MockVersionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVersionClient) EXPECT() *MockVersionClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockVersionClient) Get() (model.NodeVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(model.NodeVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVersionClientMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVersionClient)(nil).Get))
}
